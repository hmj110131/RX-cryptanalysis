//////////////////////////////////////////////////////
/////////////从奇数轮出发的最优路径////////////////////
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////


//2019年09月12日08:48:40
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:15 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 7  F4_cor_wt <= 3 
Time: 12.00 seconds.  
Searching CHAM-128 Bn_w: 8  F4_cor_wt <= 4 
Time: 14.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00010000    0x0000c000     0x04000000     0x03000001    -1 
02     0x00000000    0x04000000     0x03000001     0x01000000    -0 
03     0x04000000    0x03000001     0x01000000     0x00000000    -1 
04     0x00000001    0x01000000     0x00000000     0x00000004    -0 
05     0x00000000    0x00000000     0x00000004     0x00000002    -0 
06     0x00000000    0x00000004     0x00000002     0x00000000    -0 
07     0x00000004    0x00000002     0x00000000     0x00000000    -1 
08     0x00000000    0x00000000     0x00000000     0x00000600    -0 
09     0x00000000    0x00000000     0x00000600     0x00000000    -0 
10     0x00000000    0x00000600     0x00000000     0x00000000    -0 
11     0x00000600    0x00000000     0x00000000     0x00000000    -1 
12     0x00000200    0x00000000     0x00000000     0x00040000    -1 
13     0x00000002    0x00000000     0x00040000     0x00000600    -1 
14     0x00000001    0x00040000     0x00000600     0x00000200    -0 
15     0x01040000    0x00000600     0x00000200     0x00000002    -2 
16     0x00820600    0x00000200     0x00000002     0x86000001    -   
------------------ 
15 Round CHAM-128 odd-start Total Weight: -8 
Time cost: 14.45 seconds ==  0.24 minutes == 0.00 hours == 0.00 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 17.79 seconds ==  0.30 minutes == 0.00 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日08:55:37
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:16 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 8  F4_cor_wt <= 3 
Time: 13.00 seconds.  
Searching CHAM-128 Bn_w: 9  F4_cor_wt <= 4 
Time: 29.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000001    0x80000001     0x01020400     0x00000300    -0 
02     0x00000001    0x01020400     0x00000300     0x00000100    -0 
03     0x00020400    0x00000300     0x00000100     0x00000002    -2 
04     0x00018000    0x00000100     0x00000002     0x02040000    -1 
05     0x00000000    0x00000002     0x02040000     0x00020000    -0 
06     0x00000002    0x02040000     0x00020000     0x00000000    -1 
07     0x00040000    0x00020000     0x00000000     0x00000004    -1 
08     0x00000000    0x00000000     0x00000004     0x06000000    -0 
09     0x00000000    0x00000004     0x06000000     0x00000000    -0 
10     0x00000004    0x06000000     0x00000000     0x00000000    -1 
11     0x00000000    0x00000000     0x00000000     0x00000008    -0 
12     0x00000000    0x00000000     0x00000008     0x00000000    -0 
13     0x00000000    0x00000008     0x00000000     0x00000000    -0 
14     0x00000008    0x00000000     0x00000000     0x00000000    -1 
15     0x08000000    0x00000000     0x00000000     0x00000018    -1 
16     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
17     0x00040000    0x00000018     0x0000000c     0x0c000000    -   
------------------ 
16 Round CHAM-128 odd-start Total Weight: -9 
Time cost: 29.54 seconds ==  0.49 minutes == 0.01 hours == 0.00 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 32.63 seconds ==  0.54 minutes == 0.01 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日08:56:54
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:17 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 2.00 seconds.  
Searching CHAM-128 Bn_w: 9  F4_cor_wt <= 3 
Time: 13.00 seconds.  
Searching CHAM-128 Bn_w: 10  F4_cor_wt <= 4 
Time: 30.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000001    0x80000001     0x01020400     0x00000300    -0 
02     0x00000001    0x01020400     0x00000300     0x00000100    -0 
03     0x00020400    0x00000300     0x00000100     0x00000002    -2 
04     0x00018000    0x00000100     0x00000002     0x02040000    -1 
05     0x00000000    0x00000002     0x02040000     0x00020000    -0 
06     0x00000002    0x02040000     0x00020000     0x00000000    -1 
07     0x00040000    0x00020000     0x00000000     0x00000004    -1 
08     0x00000000    0x00000000     0x00000004     0x06000000    -0 
09     0x00000000    0x00000004     0x06000000     0x00000000    -0 
10     0x00000004    0x06000000     0x00000000     0x00000000    -1 
11     0x00000000    0x00000000     0x00000000     0x00000008    -0 
12     0x00000000    0x00000000     0x00000008     0x00000000    -0 
13     0x00000000    0x00000008     0x00000000     0x00000000    -0 
14     0x00000008    0x00000000     0x00000000     0x00000000    -1 
15     0x08000000    0x00000000     0x00000000     0x00000018    -1 
16     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
17     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
18     0x00020018    0x0000000c     0x0c000000     0x06000000    -   
------------------ 
17 Round CHAM-128 odd-start Total Weight: -10 
Time cost: 30.15 seconds ==  0.50 minutes == 0.01 hours == 0.00 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 33.14 seconds ==  0.55 minutes == 0.01 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日09:42:47
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:18 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 10  F4_cor_wt <= 3 
Time: 13.00 seconds.  
Searching CHAM-128 Bn_w: 11  F4_cor_wt <= 4 
Time: 2271.00 seconds.  
Searching CHAM-128 Bn_w: 12  F4_cor_wt <= 5 
Time: 2324.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000001    0x80000001     0x01020400     0x00000300    -0 
02     0x00000001    0x01020400     0x00000300     0x00000100    -0 
03     0x00020400    0x00000300     0x00000100     0x00000002    -2 
04     0x00018000    0x00000100     0x00000002     0x02040000    -1 
05     0x00000000    0x00000002     0x02040000     0x00020000    -0 
06     0x00000002    0x02040000     0x00020000     0x00000000    -1 
07     0x00040000    0x00020000     0x00000000     0x00000004    -1 
08     0x00000000    0x00000000     0x00000004     0x06000000    -0 
09     0x00000000    0x00000004     0x06000000     0x00000000    -0 
10     0x00000004    0x06000000     0x00000000     0x00000000    -1 
11     0x00000000    0x00000000     0x00000000     0x00000008    -0 
12     0x00000000    0x00000000     0x00000008     0x00000000    -0 
13     0x00000000    0x00000008     0x00000000     0x00000000    -0 
14     0x00000008    0x00000000     0x00000000     0x00000000    -1 
15     0x08000000    0x00000000     0x00000000     0x00000018    -1 
16     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
17     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
18     0x00020018    0x0000000c     0x0c000000     0x06000000    -2 
19     0x1000020c    0x0c000000     0x06000000     0x00060020    -   
------------------ 
18 Round CHAM-128 odd-start Total Weight: -12 
Time cost: 2324.45 seconds ==  38.74 minutes == 0.65 hours == 0.03 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 2327.67 seconds ==  38.79 minutes == 0.65 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日10:56:15
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:19 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 12  F4_cor_wt <= 4 
Time: 2522.00 seconds.  
Searching CHAM-128 Bn_w: 13  F4_cor_wt <= 5 
Time: 4248.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -   
------------------ 
19 Round CHAM-128 odd-start Total Weight: -13 
Time cost: 4248.80 seconds ==  70.81 minutes == 1.18 hours == 0.05 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 4251.94 seconds ==  70.87 minutes == 1.18 hours. 
Auto-search END! 
|************************************************************************|


//2019年09月12日10:53:56
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:20 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 6 
Time: 2581.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x00000001     0x01020408     0x00018106    -0 
02     0x00000001    0x01020408     0x00018106     0x00000000    -0 
03     0x00020408    0x00018106     0x00000000     0x00000002    -3 
04     0x00000200    0x00000000     0x00000002     0x02040800    -1 
05     0x00000003    0x00000002     0x02040800     0x00000400    -1 
06     0x00000003    0x02040800     0x00000400     0x00000200    -1 
07     0x00040800    0x00000400     0x00000200     0x00000004    -2 
08     0x00020000    0x00000200     0x00000004     0x060c0000    -1 
09     0x00000000    0x00000004     0x060c0000     0x00060000    -0 
10     0x00000004    0x060c0000     0x00060000     0x00000000    -1 
11     0x000c0000    0x00060000     0x00000000     0x00000008    -1 
12     0x00000000    0x00000000     0x00000008     0x0c000000    -0 
13     0x00000000    0x00000008     0x0c000000     0x00000000    -0 
14     0x00000008    0x0c000000     0x00000000     0x00000000    -1 
15     0x00000000    0x00000000     0x00000000     0x00000010    -0 
16     0x00000000    0x00000000     0x00000010     0x00000000    -0 
17     0x00000000    0x00000010     0x00000000     0x00000000    -0 
18     0x00000010    0x00000000     0x00000000     0x00000000    -1 
19     0x10000000    0x00000000     0x00000000     0x00000030    -1 
20     0x08000000    0x00000000     0x00000030     0x00000018    -1 
21     0x00080000    0x00000030     0x00000018     0x18000000    -   
------------------ 
20 Round CHAM-128 odd-start Total Weight: -15 
Time cost: 2581.51 seconds ==  43.03 minutes == 0.72 hours == 0.03 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 2584.53 seconds ==  43.08 minutes == 0.72 hours. 
Auto-search END! 
|************************************************************************|
//2019年09月12日11:44:30 ///这个才是正确的
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:20 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 2.00 seconds.  
Searching CHAM-128 Bn_w: 13  F4_cor_wt <= 4 
Time: 920.00 seconds.  
Searching CHAM-128 Bn_w: 14  F4_cor_wt <= 5 
Time: 2616.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -   
------------------ 
20 Round CHAM-128 odd-start Total Weight: -14 
Time cost: 2616.93 seconds ==  43.62 minutes == 0.73 hours == 0.03 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 2619.91 seconds ==  43.67 minutes == 0.73 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日11:39:43  //
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:21 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 5 
Time: 1604.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x00008004    0x00000003     0x03000000     0x01800000    -   
------------------ 
21 Round CHAM-128 odd-start Total Weight: -15 
Time cost: 1604.22 seconds ==  26.74 minutes == 0.45 hours == 0.02 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 1607.37 seconds ==  26.79 minutes == 0.45 hours. 
Auto-search END! 
|************************************************************************|
//2019年09月12日12:12:55
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:21 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 14  F4_cor_wt <= 4 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 5 
Time: 1541.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x00008004    0x00000003     0x03000000     0x01800000    -   
------------------ 
21 Round CHAM-128 odd-start Total Weight: -15 
Time cost: 1541.13 seconds ==  25.69 minutes == 0.43 hours == 0.02 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 1544.14 seconds ==  25.74 minutes == 0.43 hours. 
Auto-search END! 
|************************************************************************|


//2019年09月12日14:09:35
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:22 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 3 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 16  F4_cor_wt <= 4 
Time: 3319.00 seconds.  
Searching CHAM-128 Bn_w: 17  F4_cor_wt <= 5 
Time: 8087.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x00008004    0x00000003     0x03000000     0x01800000    -2 
23     0x04000083    0x03000000     0x01800000     0x0001800c    -   
------------------ 
22 Round CHAM-128 odd-start Total Weight: -17 
Time cost: 8087.18 seconds ==  134.79 minutes == 2.25 hours == 0.09 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 8090.20 seconds ==  134.84 minutes == 2.25 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月16日09:31:57
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:23 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 17  F4_cor_wt <= 4 
Time: 1350.00 seconds.  
Searching CHAM-128 Bn_w: 18  F4_cor_wt <= 5 
Time: 191478.00 seconds.  
Searching CHAM-128 Bn_w: 19  F4_cor_wt <= 6 





//2019年09月23日08:30:31
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:24 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 19  F4_cor_wt <= 5 
Time: 4432.00 seconds.  
Searching CHAM-128 Bn_w: 20  F4_cor_wt <= 6 
Time: 537470.00 seconds.  
Searching CHAM-128 Bn_w: 21  F4_cor_wt <= 7 
Time: 565739.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x00008004    0x00000003     0x03000000     0x01800000    -2 
23     0x04000083    0x03000000     0x01800000     0x0001800c    -3 
24     0x00000041    0x01800000     0x0001800c     0x0000c204    -1 
25     0x40800000    0x0001800c     0x0000c204     0x000000c2    -   
------------------ 
24 Round CHAM-128 odd-start Total Weight: -21 
Time cost: 565739.20 seconds ==  9428.99 minutes == 157.15 hours == 6.55 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 565742.38 seconds ==  9429.04 minutes == 157.15 hours. 
Auto-search END! 
|************************************************************************|



//2019年09月20日08:54:44
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:25 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 20  F4_cor_wt <= 5 
Time: 688.00 seconds.  
Searching CHAM-128 Bn_w: 21  F4_cor_wt <= 6 
Time: 118840.00 seconds.  
Searching CHAM-128 Bn_w: 22  F4_cor_wt <= 7 
Time: 145428.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x0000c004    0x00000003     0x03000000     0x01000000    -2 
23     0x04000083    0x03000000     0x01000000     0x0001000c    -3 
24     0x00000041    0x01000000     0x0001000c     0x0000c204    -1 
25     0x40000000    0x0001000c     0x0000c204     0x000000c2    -1 
26     0x2001000c    0x0000c204     0x000000c2     0x00000060    -   
------------------ 
25 Round CHAM-128 odd-start Total Weight: -22 
Time cost: 145428.64 seconds ==  2423.81 minutes == 40.40 hours == 1.68 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 145431.82 seconds ==  2423.86 minutes == 40.40 hours. 
Auto-search END! 
|************************************************************************|
//2019年09月24日08:31:30
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:25 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 5.00 seconds.  
Searching CHAM-128 Bn_w: 21  F4_cor_wt <= 4 
Time: 18680.00 seconds.  
Searching CHAM-128 Bn_w: 22  F4_cor_wt <= 4 
Time: 44981.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x0000c004    0x00000003     0x03000000     0x01000000    -2 
23     0x04000083    0x03000000     0x01000000     0x0001000c    -3 
24     0x00000041    0x01000000     0x0001000c     0x0000c204    -1 
25     0x40000000    0x0001000c     0x0000c204     0x000000c2    -1 
26     0x2001000c    0x0000c204     0x000000c2     0x00000060    -   
------------------ 
25 Round CHAM-128 odd-start Total Weight: -22 
Time cost: 44981.08 seconds ==  749.68 minutes == 12.49 hours == 0.52 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 44986.20 seconds ==  749.77 minutes == 12.50 hours. 
Auto-search END! 
|************************************************************************|


//2019年10月06日09:21:56
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:26 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search odd-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 22  F4_cor_wt <= 4 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 23  F4_cor_wt <= 4 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 24  F4_cor_wt <= 4 
Time: 101961.00 seconds.  
Searching CHAM-128 Bn_w: 25  F4_cor_wt <= 4 
Time: 238390.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x20000000     0x00304081     0x80003000    -0 
02     0x20000000    0x00304081     0x80003000     0x00000000    -1 
03     0x00004081    0x80003000     0x00000000     0x40000000    -2 
04     0x00000060    0x00000000     0x40000000     0x00408100    -1 
05     0x40000000    0x40000000     0x00408100     0x00000080    -1 
06     0x60000000    0x00408100     0x00000080     0x00000060    -1 
07     0x00008100    0x00000080     0x00000060     0x80000000    -2 
08     0x00004000    0x00000060     0x80000000     0x00c18000    -1 
09     0x00000000    0x80000000     0x00c18000     0x00008000    -0 
10     0x80000000    0x00c18000     0x00008000     0x00000000    -1 
11     0x00018000    0x00008000     0x00000000     0x00000001    -1 
12     0x00000000    0x00000000     0x00000001     0x01000000    -0 
13     0x00000000    0x00000001     0x01000000     0x00000000    -0 
14     0x00000001    0x01000000     0x00000000     0x00000000    -0 
15     0x00000000    0x00000000     0x00000000     0x00000002    -0 
16     0x00000000    0x00000000     0x00000002     0x00000000    -0 
17     0x00000000    0x00000002     0x00000000     0x00000000    -0 
18     0x00000002    0x00000000     0x00000000     0x00000000    -1 
19     0x02000000    0x00000000     0x00000000     0x00000004    -1 
20     0x01000000    0x00000000     0x00000004     0x00000003    -1 
21     0x00010000    0x00000004     0x00000003     0x03000000    -1 
22     0x0000c004    0x00000003     0x03000000     0x01000000    -2 
23     0x04000083    0x03000000     0x01000000     0x0001000c    -3 
24     0x00000041    0x01000000     0x0001000c     0x0000c204    -1 
25     0x40000000    0x0001000c     0x0000c204     0x000000c2    -1 
26     0x2001000c    0x0000c204     0x000000c2     0x00000060    -3 
27     0x0820c304    0x000000c2     0x00000060     0x60030010    -   
------------------ 
26 Round CHAM-128 odd-start Total Weight: -25 
Time cost: 238390.15 seconds ==  3973.17 minutes == 66.22 hours == 2.76 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 238393.92 seconds ==  3973.23 minutes == 66.22 hours. 
Auto-search END! 
|************************************************************************|
























///////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////
/////////从偶数轮出发的最优路径/////////////////////////
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////

//2019年09月12日08:58:36
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:17 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 9  F4_cor_wt <= 3 
Time: 12.00 seconds.  
Searching CHAM-128 Bn_w: 10  F4_cor_wt <= 4 
Time: 87.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000100    0x80000000     0x80000001     0x01020600    -1 
02     0x00000001    0x80000001     0x01020600     0x00000200    -0 
03     0x00000001    0x01020600     0x00000200     0x00000100    -0 
04     0x00020600    0x00000200     0x00000100     0x00000002    -2 
05     0x00018000    0x00000100     0x00000002     0x02040000    -1 
06     0x00000000    0x00000002     0x02040000     0x00020000    -0 
07     0x00000002    0x02040000     0x00020000     0x00000000    -1 
08     0x00040000    0x00020000     0x00000000     0x00000004    -1 
09     0x00000000    0x00000000     0x00000004     0x06000000    -0 
10     0x00000000    0x00000004     0x06000000     0x00000000    -0 
11     0x00000004    0x06000000     0x00000000     0x00000000    -1 
12     0x00000000    0x00000000     0x00000000     0x00000008    -0 
13     0x00000000    0x00000000     0x00000008     0x00000000    -0 
14     0x00000000    0x00000008     0x00000000     0x00000000    -0 
15     0x00000008    0x00000000     0x00000000     0x00000000    -1 
16     0x08000000    0x00000000     0x00000000     0x00000018    -1 
17     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
18     0x00040000    0x00000018     0x0000000c     0x0c000000    -   
------------------ 
17 Round CHAM-128 even-start Total Weight: -10 
Time cost: 87.84 seconds ==  1.46 minutes == 0.02 hours == 0.00 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 90.84 seconds ==  1.51 minutes == 0.03 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日09:01:55
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:18 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 10  F4_cor_wt <= 3 
Time: 12.00 seconds.  
Searching CHAM-128 Bn_w: 11  F4_cor_wt <= 4 
Time: 89.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000100    0x80000000     0x80000001     0x01020600    -1 
02     0x00000001    0x80000001     0x01020600     0x00000200    -0 
03     0x00000001    0x01020600     0x00000200     0x00000100    -0 
04     0x00020600    0x00000200     0x00000100     0x00000002    -2 
05     0x00018000    0x00000100     0x00000002     0x02040000    -1 
06     0x00000000    0x00000002     0x02040000     0x00020000    -0 
07     0x00000002    0x02040000     0x00020000     0x00000000    -1 
08     0x00040000    0x00020000     0x00000000     0x00000004    -1 
09     0x00000000    0x00000000     0x00000004     0x06000000    -0 
10     0x00000000    0x00000004     0x06000000     0x00000000    -0 
11     0x00000004    0x06000000     0x00000000     0x00000000    -1 
12     0x00000000    0x00000000     0x00000000     0x00000008    -0 
13     0x00000000    0x00000000     0x00000008     0x00000000    -0 
14     0x00000000    0x00000008     0x00000000     0x00000000    -0 
15     0x00000008    0x00000000     0x00000000     0x00000000    -1 
16     0x08000000    0x00000000     0x00000000     0x00000018    -1 
17     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
18     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
19     0x00020018    0x0000000c     0x0c000000     0x06000000    -   
------------------ 
18 Round CHAM-128 even-start Total Weight: -11 
Time cost: 89.77 seconds ==  1.50 minutes == 0.02 hours == 0.00 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 92.87 seconds ==  1.55 minutes == 0.03 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月12日09:43:09
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:19 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 11  F4_cor_wt <= 3 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 12  F4_cor_wt <= 4 
Time: 1179.00 seconds.  
Searching CHAM-128 Bn_w: 13  F4_cor_wt <= 5 
Time: 1419.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000100    0x80000000     0x80000001     0x01020600    -1 
02     0x00000001    0x80000001     0x01020600     0x00000200    -0 
03     0x00000001    0x01020600     0x00000200     0x00000100    -0 
04     0x00020600    0x00000200     0x00000100     0x00000002    -2 
05     0x00018000    0x00000100     0x00000002     0x02040000    -1 
06     0x00000000    0x00000002     0x02040000     0x00020000    -0 
07     0x00000002    0x02040000     0x00020000     0x00000000    -1 
08     0x00040000    0x00020000     0x00000000     0x00000004    -1 
09     0x00000000    0x00000000     0x00000004     0x06000000    -0 
10     0x00000000    0x00000004     0x06000000     0x00000000    -0 
11     0x00000004    0x06000000     0x00000000     0x00000000    -1 
12     0x00000000    0x00000000     0x00000000     0x00000008    -0 
13     0x00000000    0x00000000     0x00000008     0x00000000    -0 
14     0x00000000    0x00000008     0x00000000     0x00000000    -0 
15     0x00000008    0x00000000     0x00000000     0x00000000    -1 
16     0x08000000    0x00000000     0x00000000     0x00000018    -1 
17     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
18     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
19     0x00020018    0x0000000c     0x0c000000     0x06000000    -2 
20     0x1000020c    0x0c000000     0x06000000     0x00060020    -   
------------------ 
19 Round CHAM-128 even-start Total Weight: -13 
Time cost: 1419.57 seconds ==  23.66 minutes == 0.39 hours == 0.02 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 1422.61 seconds ==  23.71 minutes == 0.40 hours. 
Auto-search END! 
|************************************************************************|


//2019年09月12日11:39:02
huangmingjiang@ubuntu:~/hmj123/cham128-cor/test-odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:20 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 13  F4_cor_wt <= 4 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 14  F4_cor_wt <= 5 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 6 
Time: 5783.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x00001001     0x82040c01     0x01010600    -0 
02     0x00001001    0x82040c01     0x01010600     0x00000000    -1 
03     0x02040001    0x01010600     0x00000000     0x00100100    -2 
04     0x00020000    0x00000000     0x00100100     0x04080002    -1 
05     0x00018000    0x00100100     0x04080002     0x02000000    -1 
06     0x00100000    0x04080002     0x02000000     0x00020000    -1 
07     0x04000002    0x02000000     0x00020000     0x18000000    -2 
08     0x00040000    0x00020000     0x18000000     0x0c000004    -1 
09     0x00000000    0x18000000     0x0c000004     0x06000000    -0 
10     0x18000000    0x0c000004     0x06000000     0x00000000    -1 
11     0x00000004    0x06000000     0x00000000     0x00000018    -1 
12     0x00000000    0x00000000     0x00000018     0x00000008    -0 
13     0x00000000    0x00000018     0x00000008     0x00000000    -0 
14     0x00000018    0x00000008     0x00000000     0x00000000    -1 
15     0x00000000    0x00000000     0x00000000     0x00001000    -0 
16     0x00000000    0x00000000     0x00001000     0x00000000    -0 
17     0x00000000    0x00001000     0x00000000     0x00000000    -0 
18     0x00001000    0x00000000     0x00000000     0x00000000    -1 
19     0x00000800    0x00000000     0x00000000     0x00180000    -1 
20     0x00000008    0x00000000     0x00180000     0x00001800    -1 
21     0x00000004    0x00180000     0x00001800     0x00000c00    -   
------------------ 
20 Round CHAM-128 even-start Total Weight: -15 
Time cost: 5783.91 seconds ==  96.40 minutes == 1.61 hours == 0.07 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 5787.00 seconds ==  96.45 minutes == 1.61 hours. 
Auto-search END! 
|************************************************************************|


//2019年09月16日08:28:53
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:21 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 15  F4_cor_wt <= 5 
Time: 40612.00 seconds.  
Searching CHAM-128 Bn_w: 16  F4_cor_wt <= 6 
Time: 46723.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x00001001     0x82040c01     0x01010600    -0 
02     0x00001001    0x82040c01     0x01010600     0x00000000    -1 
03     0x02040001    0x01010600     0x00000000     0x00100100    -2 
04     0x00020000    0x00000000     0x00100100     0x04080002    -1 
05     0x00018000    0x00100100     0x04080002     0x02000000    -1 
06     0x00100000    0x04080002     0x02000000     0x00020000    -1 
07     0x04000002    0x02000000     0x00020000     0x18000000    -2 
08     0x00040000    0x00020000     0x18000000     0x0c000004    -1 
09     0x00000000    0x18000000     0x0c000004     0x06000000    -0 
10     0x18000000    0x0c000004     0x06000000     0x00000000    -1 
11     0x00000004    0x06000000     0x00000000     0x00000018    -1 
12     0x00000000    0x00000000     0x00000018     0x00000008    -0 
13     0x00000000    0x00000018     0x00000008     0x00000000    -0 
14     0x00000018    0x00000008     0x00000000     0x00000000    -1 
15     0x00000000    0x00000000     0x00000000     0x00001000    -0 
16     0x00000000    0x00000000     0x00001000     0x00000000    -0 
17     0x00000000    0x00001000     0x00000000     0x00000000    -0 
18     0x00001000    0x00000000     0x00000000     0x00000000    -1 
19     0x00000800    0x00000000     0x00000000     0x00180000    -1 
20     0x00000008    0x00000000     0x00180000     0x00001800    -1 
21     0x00000004    0x00180000     0x00001800     0x00000c00    -1 
22     0x04180000    0x00001800     0x00000c00     0x0000000c    -   
------------------ 
21 Round CHAM-128 even-start Total Weight: -16 
Time cost: 46723.33 seconds ==  778.72 minutes == 12.98 hours == 0.54 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 46726.62 seconds ==  778.78 minutes == 12.98 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月16日09:32:25
huangmingjiang@ubuntu:~/hmj123/cham128-cor/odd/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:22 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 16  F4_cor_wt <= 4 
Time: 3366.00 seconds.  
Searching CHAM-128 Bn_w: 17  F4_cor_wt <= 5 
Time: 336827.00 seconds.  
Searching CHAM-128 Bn_w: 18  F4_cor_wt <= 6 
Time: 339036.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000100    0x80000000     0x80000001     0x01020600    -1 
02     0x00000001    0x80000001     0x01020600     0x00000200    -0 
03     0x00000001    0x01020600     0x00000200     0x00000100    -0 
04     0x00020600    0x00000200     0x00000100     0x00000002    -2 
05     0x00018000    0x00000100     0x00000002     0x02040000    -1 
06     0x00000000    0x00000002     0x02040000     0x00020000    -0 
07     0x00000002    0x02040000     0x00020000     0x00000000    -1 
08     0x00040000    0x00020000     0x00000000     0x00000004    -1 
09     0x00000000    0x00000000     0x00000004     0x06000000    -0 
10     0x00000000    0x00000004     0x06000000     0x00000000    -0 
11     0x00000004    0x06000000     0x00000000     0x00000000    -1 
12     0x00000000    0x00000000     0x00000000     0x00000008    -0 
13     0x00000000    0x00000000     0x00000008     0x00000000    -0 
14     0x00000000    0x00000008     0x00000000     0x00000000    -0 
15     0x00000008    0x00000000     0x00000000     0x00000000    -1 
16     0x08000000    0x00000000     0x00000000     0x00000018    -1 
17     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
18     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
19     0x00020018    0x0000000c     0x0c000000     0x06000000    -2 
20     0x1000020c    0x0c000000     0x06000000     0x00060020    -3 
21     0x00000104    0x06000000     0x00060020     0x00030810    -2 
22     0x00000001    0x00060020     0x00030810     0x00000308    -0 
23     0x80060020    0x00030810     0x00000308     0x00000100    -   
------------------ 
22 Round CHAM-128 even-start Total Weight: -18 
Time cost: 339036.17 seconds ==  5650.60 minutes == 94.18 hours == 3.92 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 339039.30 seconds ==  5650.65 minutes == 94.18 hours. 
Auto-search END! 
|************************************************************************|

//2019年09月18日08:42:58
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:23 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 2.00 seconds.  
Searching CHAM-128 Bn_w: 18  F4_cor_wt <= 5 
Time: 112041.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00004001    0x01000060     0x80000000     0x00818206    -1 
02     0x00000000    0x80000000     0x00818206     0x00008002    -0 
03     0x80000000    0x00818206     0x00008002     0x00000000    -1 
04     0x00018206    0x00008002     0x00000000     0x80000001    -3 
05     0x00000180    0x00000000     0x80000001     0x01020400    -1 
06     0x00000001    0x80000001     0x01020400     0x00000200    -0 
07     0x00000001    0x01020400     0x00000200     0x00000100    -0 
08     0x00020400    0x00000200     0x00000100     0x00000002    -2 
09     0x00010000    0x00000100     0x00000002     0x03060000    -1 
10     0x00000000    0x00000002     0x03060000     0x00030000    -0 
11     0x00000002    0x03060000     0x00030000     0x00000000    -1 
12     0x00060000    0x00030000     0x00000000     0x00000004    -1 
13     0x00000000    0x00000000     0x00000004     0x06000000    -0 
14     0x00000000    0x00000004     0x06000000     0x00000000    -0 
15     0x00000004    0x06000000     0x00000000     0x00000000    -1 
16     0x00000000    0x00000000     0x00000000     0x00000008    -0 
17     0x00000000    0x00000000     0x00000008     0x00000000    -0 
18     0x00000000    0x00000008     0x00000000     0x00000000    -0 
19     0x00000008    0x00000000     0x00000000     0x00000000    -1 
20     0x08000000    0x00000000     0x00000000     0x00000018    -1 
21     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
22     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
23     0x00020018    0x0000000c     0x0c000000     0x06000000    -2 
24     0x1000020c    0x0c000000     0x06000000     0x00060020    -   
------------------ 
23 Round CHAM-128 even-start Total Weight: -18 
Time cost: 112041.84 seconds ==  1867.36 minutes == 31.12 hours == 1.30 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 112044.76 seconds ==  1867.41 minutes == 31.12 hours. 
Auto-search END! 
|************************************************************************|


//2019年10月21日08:35:48
huangmingjiang@ubuntu:~/hmj123/cham128-cor/even/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:24 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 18  F4_cor_wt <= 4 
Time: 0.00 seconds.  
Searching CHAM-128 Bn_w: 19  F4_cor_wt <= 5 
Time: 6811.00 seconds.  
Searching CHAM-128 Bn_w: 20  F4_cor_wt <= 6 
Time: 805668.00 seconds.  
Searching CHAM-128 Bn_w: 21  F4_cor_wt <= 7 
Time: 2641291.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00004001    0x01000060     0x80000000     0x00818206    -1 
02     0x00000000    0x80000000     0x00818206     0x00008002    -0 
03     0x80000000    0x00818206     0x00008002     0x00000000    -1 
04     0x00018206    0x00008002     0x00000000     0x80000001    -3 
05     0x00000180    0x00000000     0x80000001     0x01020400    -1 
06     0x00000001    0x80000001     0x01020400     0x00000200    -0 
07     0x00000001    0x01020400     0x00000200     0x00000100    -0 
08     0x00020400    0x00000200     0x00000100     0x00000002    -2 
09     0x00010000    0x00000100     0x00000002     0x03060000    -1 
10     0x00000000    0x00000002     0x03060000     0x00030000    -0 
11     0x00000002    0x03060000     0x00030000     0x00000000    -1 
12     0x00060000    0x00030000     0x00000000     0x00000004    -1 
13     0x00000000    0x00000000     0x00000004     0x06000000    -0 
14     0x00000000    0x00000004     0x06000000     0x00000000    -0 
15     0x00000004    0x06000000     0x00000000     0x00000000    -1 
16     0x00000000    0x00000000     0x00000000     0x00000008    -0 
17     0x00000000    0x00000000     0x00000008     0x00000000    -0 
18     0x00000000    0x00000008     0x00000000     0x00000000    -0 
19     0x00000008    0x00000000     0x00000000     0x00000000    -1 
20     0x08000000    0x00000000     0x00000000     0x00000018    -1 
21     0x04000000    0x00000000     0x00000018     0x0000000c    -1 
22     0x00040000    0x00000018     0x0000000c     0x0c000000    -1 
23     0x00020018    0x0000000c     0x0c000000     0x06000000    -2 
24     0x1000020c    0x0c000000     0x06000000     0x00060020    -3 
25     0x04000104    0x06000000     0x00060020     0x00030818    -   
------------------ 
24 Round CHAM-128 even-start Total Weight: -21 
Time cost: 2641291.31 seconds ==  44021.52 minutes == 733.69 hours == 30.57 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 2641294.78 seconds ==  44021.58 minutes == 733.69 hours. 
Auto-search END! 
|************************************************************************|



//2019年09月30日08:26:56
huangmingjiang@ubuntu:~/hmj123/cham128-cor/auto_search/Debug$ ./auto_search 
|************************************************************************|
Auto-search Begin... 
Enter the parameters : #ciper #blocksize #rounds  #mode 
ciper:cham 
Note: blocksize Now only fixed for 64 or 128 bits.  
blocksize: 128 
rounds:25 
mode: 2 
----------------Search Optimal Linear Trail-------------------
===============Search even-round============= 
Constructing CHAM-128 cLAT Tables... 
Time of Construct CHAM-128 cLAT: 3.00 seconds.  
Searching CHAM-128 Bn_w: 20  F4_cor_wt <= 4 
Time: 3946.00 seconds.  
Searching CHAM-128 Bn_w: 21  F4_cor_wt <= 4 
Time: 40280.00 seconds.  
Searching CHAM-128 Bn_w: 22  F4_cor_wt <= 4 
Time: 171156.00 seconds.  
Searching CHAM-128 Bn_w: 23  F4_cor_wt <= 4 
Time: 584652.00 seconds.  
Searching CHAM-128 Bn_w: 24  F4_cor_wt <= 4 
Time: 829909.00 seconds.  
round----XV0-----------XV1------------XV2------------XV3---------wt 
01     0x00000000    0x00001001     0x82040c01     0x01010600    -0 
02     0x00001001    0x82040c01     0x01010600     0x00000000    -1 
03     0x02040001    0x01010600     0x00000000     0x00100100    -2 
04     0x00020000    0x00000000     0x00100100     0x04080002    -1 
05     0x00018000    0x00100100     0x04080002     0x02000000    -1 
06     0x00100000    0x04080002     0x02000000     0x00020000    -1 
07     0x04000002    0x02000000     0x00020000     0x18000000    -2 
08     0x00040000    0x00020000     0x18000000     0x0c000004    -1 
09     0x00000000    0x18000000     0x0c000004     0x06000000    -0 
10     0x18000000    0x0c000004     0x06000000     0x00000000    -1 
11     0x00000004    0x06000000     0x00000000     0x00000018    -1 
12     0x00000000    0x00000000     0x00000018     0x00000008    -0 
13     0x00000000    0x00000018     0x00000008     0x00000000    -0 
14     0x00000018    0x00000008     0x00000000     0x00000000    -1 
15     0x00000000    0x00000000     0x00000000     0x00001000    -0 
16     0x00000000    0x00000000     0x00001000     0x00000000    -0 
17     0x00000000    0x00001000     0x00000000     0x00000000    -0 
18     0x00001000    0x00000000     0x00000000     0x00000000    -1 
19     0x00000800    0x00000000     0x00000000     0x00180000    -1 
20     0x00000008    0x00000000     0x00180000     0x00001800    -1 
21     0x00000004    0x00180000     0x00001800     0x00000c00    -1 
22     0x04180000    0x00001800     0x00000c00     0x0000000c    -2 
23     0x02081800    0x00000c00     0x0000000c     0x10000006    -3 
24     0x00020010    0x0000000c     0x10000006     0x06102000    -2 
25     0x00010000    0x10000006     0x06102000     0x03001000    -1 
26     0x10000106    0x06102000     0x03001000     0x00030000    -   
------------------ 
25 Round CHAM-128 even-start Total Weight: -24 
Time cost: 829909.99 seconds ==  13831.83 minutes == 230.53 hours == 9.61 days. 
Auto-search CHAM-128 optimal linear trails END! 
|************************************************************************|
Time cost: 829913.39 seconds ==  13831.89 minutes == 230.53 hours. 
Auto-search END! 
|************************************************************************|





