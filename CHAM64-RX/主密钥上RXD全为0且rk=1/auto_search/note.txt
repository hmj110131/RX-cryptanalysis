
#define N0 16
#define M0 1

char A0[N0 + 1], T0[N0 + 1], F0[N0 + 1], H0[N0 + 1],  C0[N0 + 1], X0, Y0, I0, L0, Z0;
int i=0;
int cnt = 0;


for ( i=0; i<=(N0-M0); i++) A0[i] = 0;
for ( i=N0-M0+1; i<=N0; i++) A0[i] = 1;
for ( i = 1; i<=M0; i++) { C0[i] = N0 - M0 + i; H0[N0-M0+i] = i; }
T0[N0-M0] = -1;
T0[1] = 0;
F0[N0] = N0 - M0 + 1;
I0 = N0 - M0; L0 = N0;

//第一种模式输出
for( i=1; i<=M0; i++){printf("%d\t",C0[i]);}
printf("\n");

	cnt = 1;


do{
	if (I0 == 0)
	{
		break;
	}
	else
	{
		if (T0[I0] < 0)
		{
			if ((-T0[I0]) != (I0-1))
			{
				T0[I0-1] = T0[I0];
			}
			T0[I0] = I0-1;
		}

		if ( A0[I0]==0 )
		{
			X0 = I0;
			Y0 = F0[L0];

			if (A0[I0-1] == 1)
			{
				F0[I0] = F0[I0 - 1];
			}
			else
			{
				F0[I0] = I0;
			}

			if (F0[L0] == L0)
			{
				L0 = I0; I0 = T0[I0]; goto CHANGE0;
			}

			if (L0 == N0)
			{
				T0[F0[N0]] = -I0 - 1;
				T0[I0 + 1] = T0[I0];
				I0 = F0[N0];
				F0[N0] = F0[N0] + 1;
				goto CHANGE0;
			}

			T0[L0] = -I0-1;
			T0[I0+1] = T0[I0];
			F0[L0] = F0[L0] + 1;
			I0 = L0;
			goto CHANGE0;
		}

		Y0 = I0;

		if (I0 != L0)
		{
			F0[L0] = X0 = F0[L0] - 1; F0[I0 - 1] = F0[I0];
			if (L0 == N0)
			{
				if (I0 == (F0[N0] - 1))
				{
					I0 = T0[I0];
					goto CHANGE0;
				}
				T0[F0[N0]-1] = -I0-1;
				T0[I0+1] = T0[I0];
				I0 = F0[N0] - 1;
				goto CHANGE0;
			}
			T0[L0] = -I0 -1; T0[I0 + 1] = T0[I0]; I0 = L0; goto CHANGE0;
		}

		X0 = N0;
		F0[L0 - 1] = F0[L0];
		F0[N0] = N0;
		L0 = N0;
		if (I0 == N0 - 1)
		{
			I0 = T0[N0 - 1];
			goto CHANGE0;
		}
		T0[N0 - 1] = -I0 - 1;
		T0[I0 + 1] = T0[I0];
		I0 = N0 - 1;


CHANGE0:
			A0[X0] = 1;
			A0[Y0] = 0;
			H0[X0] = Z0 = H0[Y0];
			C0[Z0] = X0;
		}

	///////////
		for(i=1; i<=M0; i++)
		{
			printf("%d\t",C0[i]);
		}
		printf("\n");
		cnt ++;


	} while (1);

printf("cnt: %d \n",cnt);

	
	
	
	
	
	

